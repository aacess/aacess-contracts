{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEAS",
          "name": "_eas",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessDenied",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientValue",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidEAS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotPayable",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "time",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "revocationTime",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Attestation",
          "name": "attestation",
          "type": "tuple"
        }
      ],
      "name": "attest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isPayable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "time",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "revocationTime",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Attestation[]",
          "name": "attestations",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "multiAttest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "time",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "revocationTime",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Attestation[]",
          "name": "attestations",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "multiRevoke",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "schema",
              "type": "bytes32"
            },
            {
              "internalType": "uint64",
              "name": "time",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "expirationTime",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "revocationTime",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "refUID",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attester",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Attestation",
          "name": "attestation",
          "type": "tuple"
        }
      ],
      "name": "revoke",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x61010060405234801561001157600080fd5b506040516107f33803806107f383398101604081905261003091610079565b6001608081905260a052600060c052806001600160a01b038116610067576040516341bc07ff60e11b815260040160405180910390fd5b6001600160a01b031660e052506100a9565b60006020828403121561008b57600080fd5b81516001600160a01b03811681146100a257600080fd5b9392505050565b60805160a05160c05160e0516107116100e260003960006103ca01526000610170015260006101470152600061011e01526107116000f3fe6080604052600436106100595760003560e01c806354fd4d501461007c57806388e5b2d9146100a757806391db0b7e146100ca578063ce46e046146100dd578063e49617e1146100f1578063e60c35051461010457600080fd5b3661007757604051631574f9f360e01b815260040160405180910390fd5b600080fd5b34801561008857600080fd5b50610091610117565b60405161009e9190610506565b60405180910390f35b6100ba6100b5366004610585565b6101ba565b604051901515815260200161009e565b6100ba6100d8366004610585565b610269565b3480156100e957600080fd5b5060006100ba565b6100ba6100ff3660046105f1565b610308565b6100ba6101123660046105f1565b61031b565b60606101427f000000000000000000000000000000000000000000000000000000000000000061032c565b61016b7f000000000000000000000000000000000000000000000000000000000000000061032c565b6101947f000000000000000000000000000000000000000000000000000000000000000061032c565b6040516020016101a693929190610634565b604051602081830303815290604052905090565b60006101c46103bf565b833460005b828110156102595760008686838181106101e5576101e561068e565b9050602002013590508281111561020f5760405163044044a560e21b815260040160405180910390fd5b61023c8989848181106102245761022461068e565b905060200281019061023691906106a4565b50600190565b61024d576000945050505050610261565b909103906001016101c9565b506001925050505b949350505050565b60006102736103bf565b833460005b828110156102595760008686838181106102945761029461068e565b905060200201359050828111156102be5760405163044044a560e21b815260040160405180910390fd5b6102eb8989848181106102d3576102d361068e565b90506020028101906102e591906106a4565b50600090565b6102fc576000945050505050610261565b90910390600101610278565b60006103126103bf565b60015b92915050565b60006103256103bf565b6000610315565b606060006103398361040a565b600101905060008167ffffffffffffffff811115610359576103596106c5565b6040519080825280601f01601f191660200182016040528015610383576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461038d57509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461040857604051634ca8886760e01b815260040160405180910390fd5b565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106104495772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610475576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061049357662386f26fc10000830492506010015b6305f5e10083106104ab576305f5e100830492506008015b61271083106104bf57612710830492506004015b606483106104d1576064830492506002015b600a83106103155760010192915050565b60005b838110156104fd5781810151838201526020016104e5565b50506000910152565b60208152600082518060208401526105258160408501602087016104e2565b601f01601f19169190910160400192915050565b60008083601f84011261054b57600080fd5b50813567ffffffffffffffff81111561056357600080fd5b6020830191508360208260051b850101111561057e57600080fd5b9250929050565b6000806000806040858703121561059b57600080fd5b843567ffffffffffffffff808211156105b357600080fd5b6105bf88838901610539565b909650945060208701359150808211156105d857600080fd5b506105e587828801610539565b95989497509550505050565b60006020828403121561060357600080fd5b813567ffffffffffffffff81111561061a57600080fd5b8201610140818503121561062d57600080fd5b9392505050565b600084516106468184602089016104e2565b8083019050601760f91b8082528551610666816001850160208a016104e2565b600192019182015283516106818160028401602088016104e2565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000823561013e198336030181126106bb57600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212201601fa0bc624511f53d4ae5321d91e41cd535bdf86df719a99162d1c9e4b589564736f6c63430008130033",
    "sourceMap": "320:1415:4:-:0;;;402:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;681:1:7;706:14:8;;;;730;;687:1:7;754:13:8;;440:4:4;-1:-1:-1;;;;;704:26:7;::::1;700:76;;753:12;;-1:-1:-1::0;;;753:12:7::1;;;;;;;;;;;700:76;-1:-1:-1::0;;;;;786:10:7::1;;::::0;-1:-1:-1;320:1415:4;;14:303:16;97:6;150:2;138:9;129:7;125:23;121:32;118:52;;;166:1;163;156:12;118:52;192:16;;-1:-1:-1;;;;;237:31:16;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;14:303;-1:-1:-1;;;14:303:16:o;:::-;320:1415:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100595760003560e01c806354fd4d501461007c57806388e5b2d9146100a757806391db0b7e146100ca578063ce46e046146100dd578063e49617e1146100f1578063e60c35051461010457600080fd5b3661007757604051631574f9f360e01b815260040160405180910390fd5b600080fd5b34801561008857600080fd5b50610091610117565b60405161009e9190610506565b60405180910390f35b6100ba6100b5366004610585565b6101ba565b604051901515815260200161009e565b6100ba6100d8366004610585565b610269565b3480156100e957600080fd5b5060006100ba565b6100ba6100ff3660046105f1565b610308565b6100ba6101123660046105f1565b61031b565b60606101427f000000000000000000000000000000000000000000000000000000000000000061032c565b61016b7f000000000000000000000000000000000000000000000000000000000000000061032c565b6101947f000000000000000000000000000000000000000000000000000000000000000061032c565b6040516020016101a693929190610634565b604051602081830303815290604052905090565b60006101c46103bf565b833460005b828110156102595760008686838181106101e5576101e561068e565b9050602002013590508281111561020f5760405163044044a560e21b815260040160405180910390fd5b61023c8989848181106102245761022461068e565b905060200281019061023691906106a4565b50600190565b61024d576000945050505050610261565b909103906001016101c9565b506001925050505b949350505050565b60006102736103bf565b833460005b828110156102595760008686838181106102945761029461068e565b905060200201359050828111156102be5760405163044044a560e21b815260040160405180910390fd5b6102eb8989848181106102d3576102d361068e565b90506020028101906102e591906106a4565b50600090565b6102fc576000945050505050610261565b90910390600101610278565b60006103126103bf565b60015b92915050565b60006103256103bf565b6000610315565b606060006103398361040a565b600101905060008167ffffffffffffffff811115610359576103596106c5565b6040519080825280601f01601f191660200182016040528015610383576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461038d57509392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461040857604051634ca8886760e01b815260040160405180910390fd5b565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106104495772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610475576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061049357662386f26fc10000830492506010015b6305f5e10083106104ab576305f5e100830492506008015b61271083106104bf57612710830492506004015b606483106104d1576064830492506002015b600a83106103155760010192915050565b60005b838110156104fd5781810151838201526020016104e5565b50506000910152565b60208152600082518060208401526105258160408501602087016104e2565b601f01601f19169190910160400192915050565b60008083601f84011261054b57600080fd5b50813567ffffffffffffffff81111561056357600080fd5b6020830191508360208260051b850101111561057e57600080fd5b9250929050565b6000806000806040858703121561059b57600080fd5b843567ffffffffffffffff808211156105b357600080fd5b6105bf88838901610539565b909650945060208701359150808211156105d857600080fd5b506105e587828801610539565b95989497509550505050565b60006020828403121561060357600080fd5b813567ffffffffffffffff81111561061a57600080fd5b8201610140818503121561062d57600080fd5b9392505050565b600084516106468184602089016104e2565b8083019050601760f91b8082528551610666816001850160208a016104e2565b600192019182015283516106818160028401602088016104e2565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000823561013e198336030181126106bb57600080fd5b9190910192915050565b634e487b7160e01b600052604160045260246000fdfea26469706673582212201601fa0bc624511f53d4ae5321d91e41cd535bdf86df719a99162d1c9e4b589564736f6c63430008130033",
    "sourceMap": "320:1415:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1185:12:7;;-1:-1:-1;;;1185:12:7;;;;;;;;;;;320:1415:4;;;;891:352:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3072:1369:7;;;;;;:::i;:::-;;:::i;:::-;;;2076:14:16;;2069:22;2051:41;;2039:2;2024:18;3072:1369:7;1911:187:16;1458:1370:7;;;;;;:::i;:::-;;:::i;980:85::-;;;;;;;;;;-1:-1:-1;1030:4:7;980:85;;2870:160;;;;;;:::i;:::-;;:::i;1256:::-;;;;;;:::i;:::-;;:::i;891:352:8:-;933:13;1039:24;1056:6;1039:16;:24::i;:::-;1110;1127:6;1110:16;:24::i;:::-;1181:23;1198:5;1181:16;:23::i;:::-;1001:221;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;958:278;;891:352;:::o;3072:1369:7:-;3213:4;909:10;:8;:10::i;:::-;3246:12;3698:9:::1;3229:14;3718:695;3742:6;3738:1;:10;3718:695;;;3875:13;3891:6;;3898:1;3891:9;;;;;;;:::i;:::-;;;;;;;3875:25;;3926:14;3918:5;:22;3914:87;;;3967:19;;-1:-1:-1::0;;;3967:19:7::1;;;;;;;;;;;3914:87;4123:32;4132:12;;4145:1;4132:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1546:4:4;;1394:163;4123:32:7::1;4118:84;;4182:5;4175:12;;;;;;;;4118:84;4365:23:::0;;::::1;::::0;1464:1:3;1460:5;3718:695:7::1;;;;4430:4;4423:11;;;;930:1;3072:1369:::0;;;;;;:::o;1458:1370::-;1599:4;909:10;:8;:10::i;:::-;1632:12;2084:9:::1;1615:14;2104:696;2128:6;2124:1;:10;2104:696;;;2261:13;2277:6;;2284:1;2277:9;;;;;;;:::i;:::-;;;;;;;2261:25;;2312:14;2304:5;:22;2300:87;;;2353:19;;-1:-1:-1::0;;;2353:19:7::1;;;;;;;;;;;2300:87;2510:32;2519:12;;2532:1;2519:15;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;636:4:4;;516:872;2510:32:7::1;2505:84;;2569:5;2562:12;;;;;;;;2505:84;2752:23:::0;;::::1;::::0;1464:1:3;1460:5;2104:696:7::1;;2870:160:::0;2968:4;909:10;:8;:10::i;:::-;1546:4:4;2991:32:7::1;2984:39:::0;2870:160;-1:-1:-1;;2870:160:7:o;1256:::-;1354:4;909:10;:8;:10::i;:::-;636:4:4;1377:32:7::1;516:872:4::0;637:698:0;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:0;-1:-1:-1;794:41:0;-1:-1:-1;955:28:0;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:0;-1:-1:-1;;;1175:2:0;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:0;1010:282;1256:21;-1:-1:-1;1312:6:0;637:698;-1:-1:-1;;;637:698:0:o;5935:128:7:-;5982:10;-1:-1:-1;;;;;6004:4:7;5982:27;;5978:79;;6032:14;;-1:-1:-1;;;6032:14:7;;;;;;;;;;;5978:79;5935:128::o;12214:916:1:-;12267:7;;-1:-1:-1;;;12342:17:1;;12338:103;;-1:-1:-1;;;12379:17:1;;;-1:-1:-1;12424:2:1;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:1;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:1;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:1;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:1;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:1;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:1:o;14:250:16:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:16;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:16;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:16:o;670:387::-;753:8;763:6;817:3;810:4;802:6;798:17;794:27;784:55;;835:1;832;825:12;784:55;-1:-1:-1;858:20:16;;901:18;890:30;;887:50;;;933:1;930;923:12;887:50;970:4;962:6;958:17;946:29;;1030:3;1023:4;1013:6;1010:1;1006:14;998:6;994:27;990:38;987:47;984:67;;;1047:1;1044;1037:12;984:67;670:387;;;;;:::o;1062:844::-;1215:6;1223;1231;1239;1292:2;1280:9;1271:7;1267:23;1263:32;1260:52;;;1308:1;1305;1298:12;1260:52;1348:9;1335:23;1377:18;1418:2;1410:6;1407:14;1404:34;;;1434:1;1431;1424:12;1404:34;1473:90;1555:7;1546:6;1535:9;1531:22;1473:90;:::i;:::-;1582:8;;-1:-1:-1;1447:116:16;-1:-1:-1;1670:2:16;1655:18;;1642:32;;-1:-1:-1;1686:16:16;;;1683:36;;;1715:1;1712;1705:12;1683:36;;1754:92;1838:7;1827:8;1816:9;1812:24;1754:92;:::i;:::-;1062:844;;;;-1:-1:-1;1865:8:16;-1:-1:-1;;;;1062:844:16:o;2103:391::-;2193:6;2246:2;2234:9;2225:7;2221:23;2217:32;2214:52;;;2262:1;2259;2252:12;2214:52;2302:9;2289:23;2335:18;2327:6;2324:30;2321:50;;;2367:1;2364;2357:12;2321:50;2390:22;;2446:3;2428:16;;;2424:26;2421:46;;;2463:1;2460;2453:12;2421:46;2486:2;2103:391;-1:-1:-1;;;2103:391:16:o;2499:999::-;2928:3;2966:6;2960:13;2982:66;3041:6;3036:3;3029:4;3021:6;3017:17;2982:66;:::i;:::-;3079:6;3074:3;3070:16;3057:29;;-1:-1:-1;;;3131:2:16;3124:5;3117:17;3165:6;3159:13;3181:78;3250:8;3246:1;3239:5;3235:13;3228:4;3220:6;3216:17;3181:78;:::i;:::-;3322:1;3278:20;;3314:10;;;3307:22;3354:13;;3376:75;3354:13;3438:1;3430:10;;3423:4;3411:17;;3376:75;:::i;:::-;3471:17;3490:1;3467:25;;2499:999;-1:-1:-1;;;;;2499:999:16:o;3503:127::-;3564:10;3559:3;3555:20;3552:1;3545:31;3595:4;3592:1;3585:15;3619:4;3616:1;3609:15;3635:329;3732:4;3790:11;3777:25;3884:3;3880:8;3869;3853:14;3849:29;3845:44;3825:18;3821:69;3811:97;;3904:1;3901;3894:12;3811:97;3925:33;;;;;3635:329;-1:-1:-1;;3635:329:16:o;3969:127::-;4030:10;4025:3;4021:20;4018:1;4011:31;4061:4;4058:1;4051:15;4085:4;4082:1;4075:15",
    "linkReferences": {},
    "immutableReferences": {
      "2194": [
        {
          "start": 970,
          "length": 32
        }
      ],
      "2484": [
        {
          "start": 286,
          "length": 32
        }
      ],
      "2486": [
        {
          "start": 327,
          "length": 32
        }
      ],
      "2488": [
        {
          "start": 368,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e60c3505",
    "isPayable()": "ce46e046",
    "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "91db0b7e",
    "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": "88e5b2d9",
    "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": "e49617e1",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"_eas\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessDenied\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEAS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPayable\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isPayable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiAttest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation[]\",\"name\":\"attestations\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"multiRevoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"schema\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"time\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"expirationTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"revocationTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"refUID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Attestation\",\"name\":\"attestation\",\"type\":\"tuple\"}],\"name\":\"revoke\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The new attestation.\"},\"returns\":{\"_0\":\"Whether the attestation is valid.\"}},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The new attestations.\",\"values\":\"Explicit ETH amounts which were sent with each attestation.\"},\"returns\":{\"_0\":\"Whether all the attestations are valid.\"}},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"params\":{\"attestations\":\"The existing attestations to be revoked.\",\"values\":\"Explicit ETH amounts which were sent with each revocation.\"},\"returns\":{\"_0\":\"Whether the attestations can be revoked.\"}},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"params\":{\"attestation\":\"The existing attestation to be revoked.\"},\"returns\":{\"_0\":\"Whether the attestation can be revoked.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"A sample schema resolver that checks whether the attestation is from a specific attester.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation and verifies whether it's valid.\"},\"isPayable()\":{\"notice\":\"Returns whether the resolver supports ETH transfers.\"},\"multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes multiple attestations and verifies whether they are valid.\"},\"multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])\":{\"notice\":\"Processes revocation of multiple attestation and verifies they can be revoked.\"},\"revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))\":{\"notice\":\"Processes an attestation revocation and verifies if it can be revoked.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/InvoiceResolver.sol\":\"InvoiceResolver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xca7753152a136f20f6637889e5df17cd8e966d144b83db5ab98d6f76b92ce2c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f18d05c7ca759c66a988a07f7837920afa9aa6bfed03b579e8b9376451165d7a\",\"dweb:/ipfs/QmXfWMqzWxguszY5pc9cmdwUvCXzNmmEEs3RWp8PBQexRn\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xc74faa0560a7f795c14e648af89ce36a66a0b9e392eff4990df3e26f9ad76066\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fa0111cd2a1773122d108661fef1a65c1d69398950b689ac07b3c2689657609\",\"dweb:/ipfs/QmU7g9prfz8n33i4XaUeLFnyjMog4496vnjhiTCr2rxWiT\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x195a987e7051cec45f53c5004e819f260178914c1784ddeae601c517de8e133b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bab66e84f7e5944d6b249146896ab34d8f756a7fb1a1fa08ca20ffa2c48adc9\",\"dweb:/ipfs/QmWBtZ1DatXRaxSGTJ2Y9i8HNH362eeBanP4TfKGKW5xYB\"]},\"src/Common.sol\":{\"keccak256\":\"0x2897537fc662aa2051b945fcd640ce9aaf6c8abfd0fa4afdf4a9310f9bda5d13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9eb58d5dff940a4c090f40c23abbe3ff647e9efa2987f4a61733138c8d9c8a6\",\"dweb:/ipfs/QmYjcn9XYNt8VLxrBkTAFDD2xjmkvzmBPB9EtifTCyLW8D\"]},\"src/InvoiceResolver.sol\":{\"keccak256\":\"0x8696e17575282968b408438e0df537d7e0598a9b6f515f704563b7414b537cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b9c99073f57b66b7d7e077e0f257e872c2f214d9327ada8bdda6e73a1980f88\",\"dweb:/ipfs/QmUWogwjSdBP4GCoPJj7HciBdtU9aDoPpL9ZLL1cUoHJHz\"]},\"src/MegaMask.sol\":{\"keccak256\":\"0xb37a9f1b254971c097d117571c6b0e9b2b5773f7dd8b9ff46078c78c5a0b08ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a241a4731d227a3b438b68bd6c22aedc96aed920b743d145f71bc5fe7571aa39\",\"dweb:/ipfs/QmbSqzCpssDzGFKgxbx3dGhCyV5R2UEkya4rCZmzRq4Hhy\"]},\"src/SchemaResolver.sol\":{\"keccak256\":\"0x23884376194b7565cede59bca54fe3b05106fc5d354e0866ad6678c51bba1c23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e87bb7379165db6f682957db1bbaef9164dabcec7626f3e54936df9ff27415\",\"dweb:/ipfs/QmPQUwDMvbPmAYSt5Cx4Tf4y7QC7aKnAbUgMRMqHKf5iT2\"]},\"src/Semver.sol\":{\"keccak256\":\"0xbe731f13da6039f00e2e9d3852190945395e7bc5408f3d049217d5f18bfffa3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://035cdb5b996a2ab208be35efff58ea6bc61aa7448765a3e24386669a2e5071fa\",\"dweb:/ipfs/QmSLTtdeKtpQyUVP4AqV9negyt5qXbJqpT8y9kGThun2KF\"]},\"src/interfaces/IEAS.sol\":{\"keccak256\":\"0x2b57ac819b344d982570062dab551dc3014ea108935e24b12fc8f03dc8c257aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b47a8b4080eb6cb24e01960994d74c58c34502ec4c6e5e8e09eeb733b6001ce\",\"dweb:/ipfs/QmTPEFsw2PZDFi4Lr9qHjCzVxbhe8BwakrLKE3gxLiBBnu\"]},\"src/interfaces/IInterchainGasPaymaster.sol\":{\"keccak256\":\"0xea5705377bcae5ff9dee6599d66f88c7e76a61169c2046a5efedcf4034354045\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://bf2871698691b03822fe99f05587dd75cfa7ee5836cedea03ccfebfda8c1b7bd\",\"dweb:/ipfs/QmP6ftJ6xA4R59wdwn7z2dhJz7Q395318Mufbiq8WucMCW\"]},\"src/interfaces/IInterchainSecurityModule.sol\":{\"keccak256\":\"0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2\",\"dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p\"]},\"src/interfaces/IMailbox.sol\":{\"keccak256\":\"0x2b74aa2bc94ce4224e8841fdf48ab0b4e61dbbf0f4aea0fb5049e11bcdb6f1c5\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://5d9e6e5f7148e19592c0171af3ed5eb7a2ba4bd4e23ac39d8767674a90973f30\",\"dweb:/ipfs/QmSCnz6wXW4jSa3eyUmWtdeSn8m5s9XXehM9vM7ReVXawr\"]},\"src/interfaces/ISchemaRegistry.sol\":{\"keccak256\":\"0x2f907f6b9e49344bf3c0345a3db63bb51a40d1f80429a823d937543482bfd8d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3359574b6d0d6264b05eaf514b82c315de1ac421f83858553db785f43e36ae03\",\"dweb:/ipfs/QmYDSsdoEBJc146MSvqb7iVaQxeiHEBPfZZBLTghHy1M5S\"]},\"src/interfaces/ISchemaResolver.sol\":{\"keccak256\":\"0xfe0f84689ed7994177fbffff6234831b96d4553e1cf4f0d036994d331335b60f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://358428f36fbf5e794c704a3558d0bad450162d4125dfe5b3f17c0088a3173fd0\",\"dweb:/ipfs/QmTE1B8QHy26k6sZjdnceVF5tBZ25ttoLXuriWJKBcSqtF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEAS",
              "name": "_eas",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccessDenied"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientValue"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidEAS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotPayable"
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "attest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "isPayable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiAttest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation[]",
              "name": "attestations",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "multiRevoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Attestation",
              "name": "attestation",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "schema",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint64",
                  "name": "time",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "expirationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "revocationTime",
                  "type": "uint64"
                },
                {
                  "internalType": "bytes32",
                  "name": "refUID",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attester",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "revoke",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The new attestation."
            },
            "returns": {
              "_0": "Whether the attestation is valid."
            }
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The new attestations.",
              "values": "Explicit ETH amounts which were sent with each attestation."
            },
            "returns": {
              "_0": "Whether all the attestations are valid."
            }
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "params": {
              "attestations": "The existing attestations to be revoked.",
              "values": "Explicit ETH amounts which were sent with each revocation."
            },
            "returns": {
              "_0": "Whether the attestations can be revoked."
            }
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "params": {
              "attestation": "The existing attestation to be revoked."
            },
            "returns": {
              "_0": "Whether the attestation can be revoked."
            }
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "attest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Processes an attestation and verifies whether it's valid."
          },
          "isPayable()": {
            "notice": "Returns whether the resolver supports ETH transfers."
          },
          "multiAttest((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Processes multiple attestations and verifies whether they are valid."
          },
          "multiRevoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes)[],uint256[])": {
            "notice": "Processes revocation of multiple attestation and verifies they can be revoked."
          },
          "revoke((bytes32,bytes32,uint64,uint64,uint64,bytes32,address,address,bool,bytes))": {
            "notice": "Processes an attestation revocation and verifies if it can be revoked."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/InvoiceResolver.sol": "InvoiceResolver"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xca7753152a136f20f6637889e5df17cd8e966d144b83db5ab98d6f76b92ce2c8",
        "urls": [
          "bzz-raw://f18d05c7ca759c66a988a07f7837920afa9aa6bfed03b579e8b9376451165d7a",
          "dweb:/ipfs/QmXfWMqzWxguszY5pc9cmdwUvCXzNmmEEs3RWp8PBQexRn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xc74faa0560a7f795c14e648af89ce36a66a0b9e392eff4990df3e26f9ad76066",
        "urls": [
          "bzz-raw://6fa0111cd2a1773122d108661fef1a65c1d69398950b689ac07b3c2689657609",
          "dweb:/ipfs/QmU7g9prfz8n33i4XaUeLFnyjMog4496vnjhiTCr2rxWiT"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x195a987e7051cec45f53c5004e819f260178914c1784ddeae601c517de8e133b",
        "urls": [
          "bzz-raw://3bab66e84f7e5944d6b249146896ab34d8f756a7fb1a1fa08ca20ffa2c48adc9",
          "dweb:/ipfs/QmWBtZ1DatXRaxSGTJ2Y9i8HNH362eeBanP4TfKGKW5xYB"
        ],
        "license": "MIT"
      },
      "src/Common.sol": {
        "keccak256": "0x2897537fc662aa2051b945fcd640ce9aaf6c8abfd0fa4afdf4a9310f9bda5d13",
        "urls": [
          "bzz-raw://d9eb58d5dff940a4c090f40c23abbe3ff647e9efa2987f4a61733138c8d9c8a6",
          "dweb:/ipfs/QmYjcn9XYNt8VLxrBkTAFDD2xjmkvzmBPB9EtifTCyLW8D"
        ],
        "license": "MIT"
      },
      "src/InvoiceResolver.sol": {
        "keccak256": "0x8696e17575282968b408438e0df537d7e0598a9b6f515f704563b7414b537cf5",
        "urls": [
          "bzz-raw://8b9c99073f57b66b7d7e077e0f257e872c2f214d9327ada8bdda6e73a1980f88",
          "dweb:/ipfs/QmUWogwjSdBP4GCoPJj7HciBdtU9aDoPpL9ZLL1cUoHJHz"
        ],
        "license": "MIT"
      },
      "src/MegaMask.sol": {
        "keccak256": "0xb37a9f1b254971c097d117571c6b0e9b2b5773f7dd8b9ff46078c78c5a0b08ea",
        "urls": [
          "bzz-raw://a241a4731d227a3b438b68bd6c22aedc96aed920b743d145f71bc5fe7571aa39",
          "dweb:/ipfs/QmbSqzCpssDzGFKgxbx3dGhCyV5R2UEkya4rCZmzRq4Hhy"
        ],
        "license": "MIT"
      },
      "src/SchemaResolver.sol": {
        "keccak256": "0x23884376194b7565cede59bca54fe3b05106fc5d354e0866ad6678c51bba1c23",
        "urls": [
          "bzz-raw://59e87bb7379165db6f682957db1bbaef9164dabcec7626f3e54936df9ff27415",
          "dweb:/ipfs/QmPQUwDMvbPmAYSt5Cx4Tf4y7QC7aKnAbUgMRMqHKf5iT2"
        ],
        "license": "MIT"
      },
      "src/Semver.sol": {
        "keccak256": "0xbe731f13da6039f00e2e9d3852190945395e7bc5408f3d049217d5f18bfffa3f",
        "urls": [
          "bzz-raw://035cdb5b996a2ab208be35efff58ea6bc61aa7448765a3e24386669a2e5071fa",
          "dweb:/ipfs/QmSLTtdeKtpQyUVP4AqV9negyt5qXbJqpT8y9kGThun2KF"
        ],
        "license": "MIT"
      },
      "src/interfaces/IEAS.sol": {
        "keccak256": "0x2b57ac819b344d982570062dab551dc3014ea108935e24b12fc8f03dc8c257aa",
        "urls": [
          "bzz-raw://0b47a8b4080eb6cb24e01960994d74c58c34502ec4c6e5e8e09eeb733b6001ce",
          "dweb:/ipfs/QmTPEFsw2PZDFi4Lr9qHjCzVxbhe8BwakrLKE3gxLiBBnu"
        ],
        "license": "MIT"
      },
      "src/interfaces/IInterchainGasPaymaster.sol": {
        "keccak256": "0xea5705377bcae5ff9dee6599d66f88c7e76a61169c2046a5efedcf4034354045",
        "urls": [
          "bzz-raw://bf2871698691b03822fe99f05587dd75cfa7ee5836cedea03ccfebfda8c1b7bd",
          "dweb:/ipfs/QmP6ftJ6xA4R59wdwn7z2dhJz7Q395318Mufbiq8WucMCW"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/interfaces/IInterchainSecurityModule.sol": {
        "keccak256": "0xd144a00a15eef18012f8dae28ca1a7d965012f88ff4a07382a172ae6e02811ce",
        "urls": [
          "bzz-raw://045da4f74529b4c0252743fe3f84e96d7e6e41cf30632011eefbb5b33eaa4cb2",
          "dweb:/ipfs/QmefWSKyXSndAGC38tszRfdXbo4kvSsgcq7oTZz9rQ9n2p"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/interfaces/IMailbox.sol": {
        "keccak256": "0x2b74aa2bc94ce4224e8841fdf48ab0b4e61dbbf0f4aea0fb5049e11bcdb6f1c5",
        "urls": [
          "bzz-raw://5d9e6e5f7148e19592c0171af3ed5eb7a2ba4bd4e23ac39d8767674a90973f30",
          "dweb:/ipfs/QmSCnz6wXW4jSa3eyUmWtdeSn8m5s9XXehM9vM7ReVXawr"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/interfaces/ISchemaRegistry.sol": {
        "keccak256": "0x2f907f6b9e49344bf3c0345a3db63bb51a40d1f80429a823d937543482bfd8d9",
        "urls": [
          "bzz-raw://3359574b6d0d6264b05eaf514b82c315de1ac421f83858553db785f43e36ae03",
          "dweb:/ipfs/QmYDSsdoEBJc146MSvqb7iVaQxeiHEBPfZZBLTghHy1M5S"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISchemaResolver.sol": {
        "keccak256": "0xfe0f84689ed7994177fbffff6234831b96d4553e1cf4f0d036994d331335b60f",
        "urls": [
          "bzz-raw://358428f36fbf5e794c704a3558d0bad450162d4125dfe5b3f17c0088a3173fd0",
          "dweb:/ipfs/QmTE1B8QHy26k6sZjdnceVF5tBZ25ttoLXuriWJKBcSqtF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/InvoiceResolver.sol",
    "id": 1526,
    "exportedSymbols": {
      "Attestation": [
        1459
      ],
      "IEAS": [
        2825
      ],
      "InvoiceResolver": [
        1525
      ],
      "MegaMask": [
        1885
      ],
      "SchemaResolver": [
        2477
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1703:4",
    "nodes": [
      {
        "id": 1477,
        "nodeType": "PragmaDirective",
        "src": "33:23:4",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 1479,
        "nodeType": "ImportDirective",
        "src": "58:52:4",
        "nodes": [],
        "absolutePath": "src/SchemaResolver.sol",
        "file": "./SchemaResolver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1526,
        "sourceUnit": 2478,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1478,
              "name": "SchemaResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2477,
              "src": "66:14:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1482,
        "nodeType": "ImportDirective",
        "src": "112:56:4",
        "nodes": [],
        "absolutePath": "src/interfaces/IEAS.sol",
        "file": "./interfaces/IEAS.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1526,
        "sourceUnit": 2826,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1480,
              "name": "IEAS",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2825,
              "src": "120:4:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1481,
              "name": "Attestation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1459,
              "src": "126:11:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1484,
        "nodeType": "ImportDirective",
        "src": "170:40:4",
        "nodes": [],
        "absolutePath": "src/MegaMask.sol",
        "file": "./MegaMask.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1526,
        "sourceUnit": 1886,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1483,
              "name": "MegaMask",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1885,
              "src": "178:8:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1525,
        "nodeType": "ContractDefinition",
        "src": "320:1415:4",
        "nodes": [
          {
            "id": 1497,
            "nodeType": "FunctionDefinition",
            "src": "402:46:4",
            "nodes": [],
            "body": {
              "id": 1496,
              "nodeType": "Block",
              "src": "446:2:4",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1493,
                    "name": "_eas",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1490,
                    "src": "440:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEAS_$2825",
                      "typeString": "contract IEAS"
                    }
                  }
                ],
                "id": 1494,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1492,
                  "name": "SchemaResolver",
                  "nameLocations": [
                    "425:14:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2477,
                  "src": "425:14:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "425:20:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1490,
                  "mutability": "mutable",
                  "name": "_eas",
                  "nameLocation": "419:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1497,
                  "src": "414:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEAS_$2825",
                    "typeString": "contract IEAS"
                  },
                  "typeName": {
                    "id": 1489,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1488,
                      "name": "IEAS",
                      "nameLocations": [
                        "414:4:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2825,
                      "src": "414:4:4"
                    },
                    "referencedDeclaration": 2825,
                    "src": "414:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEAS_$2825",
                      "typeString": "contract IEAS"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "413:11:4"
            },
            "returnParameters": {
              "id": 1495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "446:0:4"
            },
            "scope": 1525,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1510,
            "nodeType": "FunctionDefinition",
            "src": "516:872:4",
            "nodes": [],
            "body": {
              "id": 1509,
              "nodeType": "Block",
              "src": "642:746:4",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              2448
            ],
            "documentation": {
              "id": 1498,
              "nodeType": "StructuredDocumentation",
              "src": "454:57:4",
              "text": " @dev Check that the attestation exists"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onAttest",
            "nameLocation": "525:8:4",
            "overrides": {
              "id": 1505,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "618:8:4"
            },
            "parameters": {
              "id": 1504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1501,
                  "mutability": "mutable",
                  "name": "attestation",
                  "nameLocation": "564:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "543:32:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Attestation_$1459_calldata_ptr",
                    "typeString": "struct Attestation"
                  },
                  "typeName": {
                    "id": 1500,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1499,
                      "name": "Attestation",
                      "nameLocations": [
                        "543:11:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1459,
                      "src": "543:11:4"
                    },
                    "referencedDeclaration": 1459,
                    "src": "543:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Attestation_$1459_storage_ptr",
                      "typeString": "struct Attestation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1503,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "585:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "533:75:4"
            },
            "returnParameters": {
              "id": 1508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1507,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1510,
                  "src": "636:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1506,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "635:6:4"
            },
            "scope": 1525,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1524,
            "nodeType": "FunctionDefinition",
            "src": "1394:163:4",
            "nodes": [],
            "body": {
              "id": 1523,
              "nodeType": "Block",
              "src": "1529:28:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1546:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1520,
                  "id": 1522,
                  "nodeType": "Return",
                  "src": "1539:11:4"
                }
              ]
            },
            "baseFunctions": [
              2459
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onRevoke",
            "nameLocation": "1403:8:4",
            "overrides": {
              "id": 1517,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1505:8:4"
            },
            "parameters": {
              "id": 1516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1513,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1524,
                  "src": "1421:20:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Attestation_$1459_calldata_ptr",
                    "typeString": "struct Attestation"
                  },
                  "typeName": {
                    "id": 1512,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1511,
                      "name": "Attestation",
                      "nameLocations": [
                        "1421:11:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1459,
                      "src": "1421:11:4"
                    },
                    "referencedDeclaration": 1459,
                    "src": "1421:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Attestation_$1459_storage_ptr",
                      "typeString": "struct Attestation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1515,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1524,
                  "src": "1467:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1514,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1467:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1411:79:4"
            },
            "returnParameters": {
              "id": 1520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1519,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1524,
                  "src": "1523:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1518,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1522:6:4"
            },
            "scope": 1525,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1486,
              "name": "SchemaResolver",
              "nameLocations": [
                "348:14:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2477,
              "src": "348:14:4"
            },
            "id": 1487,
            "nodeType": "InheritanceSpecifier",
            "src": "348:14:4"
          }
        ],
        "canonicalName": "InvoiceResolver",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1485,
          "nodeType": "StructuredDocumentation",
          "src": "212:107:4",
          "text": " @title A sample schema resolver that checks whether the attestation is from a specific attester."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1525,
          2477,
          2540,
          3102
        ],
        "name": "InvoiceResolver",
        "nameLocation": "329:15:4",
        "scope": 1526,
        "usedErrors": [
          1425,
          2187,
          2189,
          2191
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 4
}